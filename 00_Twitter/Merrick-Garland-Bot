# -------- IMPORTS
import tweepy
import os
import pandas as pd
import random
import json
import datetime

# -------- HELPER FUNCTIONS
def getTargets():

    """
    Reads in CSV with legislator's senate handles
    Filters out Dem / Independent senators
    """

    sens = pd.read_csv("Senator_Handles.csv")
    sens = sens[sens["Party"] == "R"]
    return sens

def popSentiments():

    """
    Shoutout to MotherJones for these sick quotes
    """

    pool = ['"The president who is elected in November should be the one who makes this decision." -Sen. Gardner',
        '"If an opening comes in the last year of President Trump’s term...we’ll wait to the next election" -Sen. Graham',
        '"There is a long tradition that you don’t do this in an election year." -Sen. Cruz',
        '"I don’t think we should be moving on a nominee in the last year of this president’s term." -Sen. Rubio',
        '"We will see what the people say this fall and our next president...will be making that nomination." -Sen. Ernst',
        '"The next Court appointment should be made by the newly-elected president." -Sen. Toomey',
        '"The Senate should not confirm a new Supreme Court justice until we have a new president." -Sen. Blunt',
        '"The American people should have a voice in the selection of their next Supreme Court Justice." -Sen. McConnell',
        '"This vacancy should not be filled until we have a new president." -Sen. McConnell',
        '"The Supreme Court seat doesn’t belong to any president or any political party" -Sen. McConnell',
        '"If an opening comes in the last year of President Trump\'s term...we will wait to the next election" -Sen. Graham']

    for k in range(3):
        random.shuffle(pool)

    return random.choice(pool)

def author(HANDLE):

    """
    Sends Senator a tweet reminding them of their policy towards Merrick Garland
    """

    text = ("{} " + popSentiments()).format(HANDLE)
    return text

def FuckMitchMcConnell():

    """
    Speaks for itself in my opinion
    """

    text = "@SenateMajLdr Merrick Garland. End tweet."
    return text

def FuckHypocrisy():
    senators = getTargets()

    for handle in senators["Handle"]:

        if handle == "@SenateMajLdr":
            api.update_status(FuckMitchMcConnell())

        else:
            api.update_status(author(handle))

def RememberMe():
    api.update_status(popSentiments())

def Countdown():
    today = datetime.date.today()
    election = datetime.date(2020, 11, 3)
    diff = election - today
    return diff.days

def daysUntilElection():
    days = Countdown()
    text = ("There are {} days until the General Election".format(str(days)))
    api.update_status(text)


# -------- RIPPER
with open("PASSWORDS.txt") as json_file:
    passwords = json.load(json_file)

authSet = tweepy.OAuthHandler(consumer_key = passwords['API_Key'],
                            consumer_secret= passwords['API_Secret'])

authSet.set_access_token(key = passwords['Access_Token'],
                        secret = passwords['Access_Secret'])

api = tweepy.API(authSet, wait_on_rate_limit = True)

try:
    api.verify_credentials()
except:
    print("\nWhoops! Invalid credentials\n")

try:
    RememberMe()
except:
    daysUntilElection()
finally:
    print("Updated Status")
